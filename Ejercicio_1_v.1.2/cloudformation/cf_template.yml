AWSTemplateFormatVersion: 2010-09-09
Mappings:
  SubnetConfig:
    VPC:
      CIDR: "10.0.0.0/16"
    Private:
      CIDR: "10.0.1.0/24"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, Private, CIDR]

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  EFSFileSystem:
    Type: "AWS::EFS::FileSystem"
    Properties: {}

  EC2Instance1:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-1853ac65"
      SubnetId: !Ref PrivateSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y && apt install -y nfs-common python3
          mkdir -p /mnt/efs
          mount -t nfs4 -o nfsvers=4.1 fs-XXXX.efs.us-east-1.amazonaws.com:/ /mnt/efs               #montar el id del efs creado
          cat <<EOF > /home/ubuntu/server.py
          ${ServerCode}
          EOF

          nohup python3 /home/ubuntu/server.py &


  EC2Instance2:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-1853ac65"
      SubnetId: !Ref PrivateSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y && apt install -y nfs-common python3
          mkdir -p /mnt/efs
          mount -t nfs4 -o nfsvers=4.1 fs-XXXX.efs.us-east-1.amazonaws.com:/ /mnt/efs     #montar el id del efs creado
          cat <<EOF > /home/ubuntu/server.py
          ${ServerCode}
          EOF

          nohup python3 /home/ubuntu/server.py &

  HAProxyInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-1853ac65"
      SubnetId: !Ref PrivateSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y && apt install -y haproxy
          cat <<EOF > /etc/haproxy/haproxy.cfg
          global
              daemon
              maxconn 256
          defaults
              mode http
              timeout connect 5000ms
              timeout client 50000ms
              timeout server 50000ms
          frontend http_front
              bind *:80
              default_backend http_back
          backend http_back
              balance roundrobin
              option httpchk GET /
              server web1 10.0.1.10:5000 check
              server web2 10.0.1.11:5000 check
          EOF
          systemctl restart haproxy
